#version 450

layout(binding = 0) uniform UniformBufferObject
{
	mat4 model;
	mat4 view;
	mat4 proj;
	float delta;
} ubo;

struct Particle
{
	vec3 position;
	vec3 velocity;
	vec2 chroma;
};
layout(std140, binding = 2) readonly buffer ParticleSSBOIn
{
   Particle particlesIn[];
};
layout(std140, binding = 3) buffer ParticleSSBOOut
{
   Particle particlesOut[];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() 
{
	uint index = gl_GlobalInvocationID.x;  

	Particle particleIn = particlesIn[index];

	particlesOut[index].position = particleIn.position + particleIn.velocity * ubo.delta;
	particlesOut[index].velocity = particleIn.velocity*0.99;
}